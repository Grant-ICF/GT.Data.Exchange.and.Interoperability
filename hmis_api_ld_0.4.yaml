openapi: 3.1.0
info:
  title: HMIS API Sandbox Specifications
  version: 1.0.0
  description: |
    HMIS API Sandbox request, response, and error responses for each scenario in the HMIS API Reference Guide.
    
    This specification uses YAML-LD (YAML with Linked Data extensions) 
    to bridge familiar developer tooling with semantic web capabilities.
  
  x-jsonld-context: https://raw.githubusercontent.com/HUD-Data-Lab/HMIS-Logic-Model/refs/heads/main/001.%20Upcoming%20Versions/JSONLD/FY26HMIS_JSON-LD_v1.jsonld 
  x-HMIS-Regulation:
    - name: FY 2026 HMIS Data Standards
      url: https://www.hudexchange.info/resource/3824/hmis-data-dictionary/
      regulation: Data collection and implementation guidance
    - name: 2004 Data and Technical Standards Notice
      url: https://www.hudexchange.info/resource/1318/2004-hmis-data-and-technical-standards-final-notice/
      regulation: Privacy and Security Standards
    - name: Coordinated Entry Management and Data Guide
      url: https://www.hudexchange.info/resource/5758/coordinated-entry-management-and-data-guide/
      regulation: Guidance on Privacy and Security Standards including allowable uses and disclosures
    - name: CoC Program Interim Rule
      url: https://www.hudexchange.info/resource/2033/hearth-coc-program-interim-rule/
      regulation: Procedures and Policies needed to designate and operate an HMIS, ensuring HMIS compliance, and maintaining a Privacy Plan, Security Plan, and Data Quality Plan

servers:
  - url: http://localhost:3000/api/v1
    description: HMIS API Sandbox

security: 
  -  BasicAuth: []

paths:

  # ============================================================================
  # BASELINE SCENARIO: Search for a client record by identifying information
  # Purpose:
  # ============================================================================
  /client/search:
    post: # this was a recommended approach to project personal identifying information from urls and the logs. Not quite sure how it will work. This seems counter intuitive to me - Grant 10/24
      operationId: clientSearch
      summary: Search for clients by identifying information using POST
      description: |  
        Search for client records using various identifying criteria:
        - Name (first, last, partial matches)
        - Date of birth
        - Social Security Number (last 4 digits)
      requestBody: 
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                PersonalID:
                  type: string
                  maxLength: 32
                FirstName:
                  type: string
                  description: First name of the client (for Query optional and may be a prefix partial)
                  maxLength: 50
                LastName:
                  type: string
                  description: Last name of the client (for Query optional and may be a prefix partial)
                  maxLength: 50
                DOB:
                  type: string
                  format: date
                  description: Optional date of birth of client. A date in ISO 8601 format (yyyy-mm-dd)
                SSN:
                  type: string
                  description: Social Security Number
                  pattern: '^[0-9]{9}$'
      responses:
        '200':
          description: A list of clients that match the query
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    PersonalID:
                      type: string
                      maxLength: 32
                    FirstName:
                      type: string
                      description: First name of the client (for Query optional and may be a prefix partial)
                      maxLength: 50
                    LastName:
                      type: string
                      description: Last name of the client (for Query optional and may be a prefix partial)
                      maxLength: 50
                    DOB:
                      type: string
                      format: date
                      description: Optional date of birth of client. A date in ISO 8601 format (yyyy-mm-dd)
                    SSN:
                      type: string
                      description: Social Security Number
                      pattern: '^[0-9]{9}$'
        '404':
          description: Client not found
          content: 
            text/plain:
              schema: 
                type: string
                example: Client not found

  # ============================================================================
  # BASELINE SCENARIO: Generate a new client record
  # Purpose:
  # ============================================================================
  /client:
    post: 
      operationId: postClient
      summary: Create a new client record
      description: This creates a new client record
      requestBody: 
        content:
          application/json: #does this work? I want this to be any of the clientBase schema. We may want to consider making this more flexible. It was mentioned that some CoCs will require different elements to be included.
            schema:
              $ref: "#/components/schemas/clientBase"
      responses: 
        '200':
          description: OK
          content: 
            application/json:
              schema: 
                allOf: 
                  - $ref: "#/components/schemas/clientPrimaryKey"
                  - $ref: "#/components/schemas/clientBase"
                  - $ref: "#/components/schemas/clientMetaData"
        '400':
          description: Invalid input provided
          content: 
            application/json:
              schema: 
                oneOf:
                  - type: object
                    properties:
                      missingInformationIncorrectDatatype: #this may not be enough or relevant. The intention was to flag when the datatype being entered is incorrect
                        type: string
                        description: Invalid input provided
                  - type: object
                    properties: 
                      invalidInputProvided:
                        type: string
                        description: Please set MiddleName equal to Test

  # ============================================================================
  # BASELINE SCENARIO: Generate a list of all client records in a project
  # Purpose:
  # ============================================================================
  /clientinproject:
    get: 
      operationId: clientListByProjectID
      summary: Get list of clients by project or project using projectID
      description: Get list of clients by project or project using projectID
      parameters:
        - name: ProjectID
          in: query
          required: false
          description: One or more project IDs to filter clients
          style: form
          explode: true
          schema: 
            type: array
            items:
              type: string
              maxLength: 32

      responses:
        '200':
          description: A list of clients and any unmatched project IDs
          content:
            application/json:
              schema:
                type: object
                properties:
                  matchedClients:
                    type: array
                    items:
                      $ref: "#/components/schemas/clientBase"
                    description: List of clients associated with the provided project IDs
                  unmatchedProjectIDs:
                    type: array
                    items:
                      type: string
                      maxLength: 32
                    description: List of project IDs that did not match any clients
                required: 
                  - matchedClients
                  - unmatchedProjectIDs
        '404':
            description: No matching project IDs found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    unmatchedProjectIDs:
                      type: array
                      items:
                        type: string
                        maxLength: 32
                      description: All provided project IDs were unmatched

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

  schemas:
    clientPrimaryKey: #Can these be parsed in with the JSON-LD -> Python process? 
      type: object
      properties:
        PersonalID:
          type: string
          description: Unique identifier for the client
          maxLength: 32
  
    clientBase:
      type: object
      properties: 
        FirstName:
          type: string
          description: First name of the client
          maxLength: 50
        MiddleName:
          type: string
          description: Middle name of the client
          maxLength: 50
        LastName:
          type: string
          description: Last name of the client
          maxLength: 50
        NameSuffix:
          type: string
          description: Suffix of the client's name
          maxLength: 50
        NameDataQuality:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NameDataQuality_list' 
        SSN:
          type: string
          description: Social Security Number
          pattern: '^[0-9]{9}$'
        SSNDataQuality:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/SSNDataQuality_list'
        DOB:
          type: string
          description: Date of birth of the client
          format: date
        DOBDataQuality:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/DOBDataQuality_list'
        AmIndAKNative:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYes_list'
        Asian:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYes_list'
        BlackAfAmerican:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYes_list'
        HispanicLatinaeo:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYes_list'
        MidEastNAfrican:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYes_list'
        NativeHIPacific:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYes_list'
        White:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYes_list'
        RaceNone:
          type: integer
          description: non-null only if all other race fields are 0 (UNKNOWN)
          oneOf:
            - $ref: '#/components/schemas/RaceGenderNone_list'
        AdditionalRaceEthnicity:
          type: string
          maxLength: 100
        Woman:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYes_list'
        Man:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYes_list'
        NonBinary:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYes_list'
        CulturallySpecific:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYes_list'
        Transgender:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYes_list'
        Questioning:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYes_list'
        DifferentIdentity:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYes_list'
        GenderNone:
          type: integer
          description: Non-null only if all other gender fields = 0
          oneOf:
            - $ref: '#/components/schemas/RaceGenderNone_list'
        DifferentIdentityText:
          type: string
          maxLength: 100
        VeteranStatus:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYesReasonsForMissingData_list'
        YearEnteredService:
          type: string
          pattern: '^(19[2-8][0-9]|199[0-9]|20[01][0-9]|202[0-4])$'
        YearSeparated:
          type: string
          pattern: '^(19[2-8][0-9]|199[0-9]|20[01][0-9]|202[0-4])$'
        WorldWarII:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYesReasonsForMissingData_list'
        KoreanWar:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYesReasonsForMissingData_list'
        VietnamWar:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYesReasonsForMissingData_list'
        DesertStorm:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYesReasonsForMissingData_list'
        AfghanistanOEF:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYesReasonsForMissingData_list'
        IraqOIF:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYesReasonsForMissingData_list'
        IraqOND:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYesReasonsForMissingData_list'
        OtherTheater:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/NoYesReasonsForMissingData_list'
        MilitaryBranch:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/MilitaryBranch_list'
        DischargeStatus:
          type: integer
          oneOf:
            - $ref: '#/components/schemas/DischargeStatus_list' 
       
    clientMetaData:
      type: object
      properties:
        DateCreated:
          type: string
          format: date-time
        DateUpdated:
          type: string
          format: date-time
        UserID:
          type: string
          maxLength: 32
        DateDeleted:
          type: string
          format: date-time

# Response Lists

    NameDataQuality_list:
      type: integer
      enum: [1, 2, 8, 9, 99]
      description: |
        1 - Full name reported
        2 - Partial, street name, or code name reported
        8 - Client doesn't know
        9 - Client prefers not to answer
        99 - Data not collected
    SSNDataQuality_list:
      type: integer
      enum: [1, 2, 8, 9, 99]
      description: |
        1 - Full SSN Reported
        2 - Approximate or partial SSN reported
        8 - Client doesn't know
        9 - Client prefers not to answer
        99 - Data not collected
    DOBDataQuality_list:
      type: integer
      enum: [1, 2, 8, 9, 99]
      description: |
        1 - Full DOB reported
        2 - Approximate or partial DOB reported
        8 - Client doesn't know
        9 - Client prefers not to answer
        99 - Data not collected
    NoYes_list:
      type: integer
      enum: [0, 1]
      description: |
        0 - No
        1 - Yes
    RaceGenderNone_list:
      type: integer
      enum: [8,9,99]
      description: |
        8 - Client doesn't know
        9 - Client prefers not to answer
        99 - Data not collected
    NoYesReasonsForMissingData_list:
      type: integer
      enum: [0, 1, 8, 9, 99]
      description: |
        0 - No
        1 - Yes
        8 - Client doesn't know
        9 - Client prefers not to answer
        99 - Data not collected
    MilitaryBranch_list:
      type: integer
      enum: [1, 2, 3, 4, 6, 7, 8, 9, 99]
      description: |
        1 - Army
        2 - Air Force
        3 - Navy
        4 - Marines
        6 - Coast Guard
        7 - Space Force
        8 - Client doesn't know
        9 - Client prefers not to answer
        99 - Data not collected
    DischargeStatus_list:
      type: integer
      enum: [1, 2, 4, 5, 6, 7, 8, 9, 99]
      description: |
        1 - Honorable
        2 - General under honorable conditions
        4 - Bad conduct
        5 - Dishonorable
        6 - Under other than honorable conditions (OTH)
        7 - Uncharacterized
        8 - Client doesn't know
        9 - Client prefers not to answer
        99 - Data not collected